<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: requirejs | Ciro Nunes]]></title>
  <link href="http://cironunes.github.com/blog/categories/requirejs/atom.xml" rel="self"/>
  <link href="http://cironunes.github.com/"/>
  <updated>2015-06-20T18:47:18-03:00</updated>
  <id>http://cironunes.github.com/</id>
  <author>
    <name><![CDATA[Ciro Nunes]]></name>
    <email><![CDATA[ciroanunes@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJS: Melhores práticas - Parte II: Carregamento de scripts]]></title>
    <link href="http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento/"/>
    <updated>2013-03-14T21:30:00-03:00</updated>
    <id>http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/cover-bestpratices-loading.jpg"></p>

<p>Baixar recursos (HTML, CSS, scripts, imagens) tem um custo alto em termos de performance das aplicações. Principalmente scripts, que podem parar completamente o carregamento da página enquanto são baixados e executados pela engine de JavaScript do browser.</p>

<p>Nesta parte vamos focar em estratégias para carregá-los e como a flexibilidade do Angular nos possibilita fazê-lo de forma performática.</p>

<!-- more -->


<h2>Navegue pela série</h2>

<ul>
<li><a href="/angularjs-melhores-praticas-parte-I-bootstrap">Parte I - Iniciando um projeto e a estrutura de diretórios</a></li>
<li><a href="/angularjs-melhores-praticas-parte-II-carregamento">Parte II - Carregamento de scripts</a></li>
<li>Parte III - Dicas e truques</li>
<li>Parte IV - MVC</li>
</ul>


<h2>Regra nº 1: Coloque seus scripts no rodapé</h2>

<p>Desta maneira você evita que o carregamento da página seja bloqueado enquanto eles são baixados, "parseados" e executados. <a href="http://developer.yahoo.com/performance/rules.html#js_bottom">Saiba mais</a></p>

<h2>Regra nº 2: Use um CDN em produção</h2>

<p>Fazendo isso, não otimizamos apenas nossa aplicação, mas a de todos que fizerem o mesmo. <a href="http://developer.yahoo.com/performance/rules.html#cdn">Saiba mais</a></p>

<p>O Angular está hospedado no <a href="https://developers.google.com/speed/libraries/devguide?hl=pt-PT#angularjs">CDN do Google</a>, basta incluí-lo no projeto, sempre no rodapé] e estaremos prontos para começar.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://cironunes.github.com//ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Recomendo ter o arquivo no projeto também, para poder trabalhar offline e se aventurar pelo código! :)</p>

<h2>Bônus: Carregue seus scripts de forma assíncrona e gerencie suas dependencias</h2>

<p><img class="center" src="/images/posts/logo-requirejs.png"></p>

<p>Caso prefira, saiba mais sobre os <a href="https://gist.github.com/desandro/4686136">benefícios de fazê-lo</a> antes de continuar.</p>

<p>Este <a href="https://github.com/cironunes/ng-require">demo</a> será usado para facilitar a explicação. É indispensável cloná-lo e navegar pelo código para entender como funciona.</p>

<p>Para conseguirmos fazer o carregamento assíncrono dos nossos scripts, primeiro precisamos entender como funcionar o “startup” do Angular.</p>

<h2>Angular startup</h2>

<p>Sua aplicação pode ser iniciada de duas formas:</p>

<p><strong>Automaticamente:</strong> via <code>ng-app</code></p>

<p><div><script src='https://gist.github.com/5229926.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>você pode passar também um nome opicional para o módulo</p>

<p><div><script src='https://gist.github.com/5229865.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<ul>
<li><strong>manualmente:</strong> via <code>angular.bootstrap</code></li>
</ul>


<p><div><script src='https://gist.github.com/5229948.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>Essa flexibilidade, nos possibilita carregar nossos recursos como bem entendermos, e quando estivermos prontos (callback) fazer o Angular <a href="http://docs.angularjs.org/api/ng.$compile">ler nosso HTML</a> e dar vida as nossas diretivas.</p>

<p><strong>Atenção:</strong> Para que possamos carregar nossos scripts em qualquer ordem, é necessário incluir o script a seguir, antes do carregamento do nosso módulo principal do RequireJS.</p>

<p><div><script src='https://gist.github.com/5431503.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>Depois basta fazer a chamada principal</p>

<p>```javascript</p>

<script data-main="js/main.js" src="js/libs/require.js"></script>


<p>```</p>

<p>O arquivo <code>main.js</code> deve se parecer com este:</p>

<p>```javascript
requirejs.config({</p>

<pre><code>baseUrl: 'js/libs',
paths: {
    app: '../'
}
</code></pre>

<p>});</p>

<p>requirejs([</p>

<pre><code>'angular',
'app/app',
'app/controllers',
'app/filters',
'app/services',
'app/directives'
], function() {
    angular.bootstrap(document, ['myApp']);
</code></pre>

<p>});
```</p>

<p>Onde carregamos nossas dependências de forma assíncrona, e depois de tudo pronto, usamos o <code>angular.bootstrap</code> para fazer o startup manual.</p>

<p>Mais uma vez, recomendo fortemente dar uma olhada no código do <a href="https://github.com/cironunes/ng-require">demo</a> para um entendimento mais claro.</p>

<p>Dúvidas? Não concorda com algo? Mande um e-mail ou deixe um comentário, só não deixe de me notificar! :)</p>
]]></content>
  </entry>
  
</feed>
