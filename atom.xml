<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ciro Nunes]]></title>
  <link href="http://cironunes.github.com/atom.xml" rel="self"/>
  <link href="http://cironunes.github.com/"/>
  <updated>2014-08-17T01:22:15-03:00</updated>
  <id>http://cironunes.github.com/</id>
  <author>
    <name><![CDATA[Ciro Nunes]]></name>
    <email><![CDATA[ciroanunes@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJS: Melhores práticas - Parte II: Carregamento de scripts]]></title>
    <link href="http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento/"/>
    <updated>2013-03-14T21:30:00-03:00</updated>
    <id>http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://cironunes.github.com/images/posts/cover-bestpratices-loading.jpg"></p>

<p>Baixar recursos (HTML, CSS, scripts, imagens) tem um custo alto em termos de performance das aplicações. Principalmente scripts, que podem parar completamente o carregamento da página enquanto são baixados e executados pela engine de JavaScript do browser.</p>

<p>Nesta parte vamos focar em estratégias para carregá-los e como a flexibilidade do Angular nos possibilita fazê-lo de forma performática.</p>

<!-- more -->


<h2>Navegue pela série</h2>

<ul>
<li><a href="http://cironunes.github.com/angularjs-melhores-praticas-parte-I-bootstrap">Parte I - Iniciando um projeto e a estrutura de diretórios</a></li>
<li><a href="http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento">Parte II - Carregamento de scripts</a></li>
<li>Parte III - Dicas e truques</li>
<li>Parte IV - MVC</li>
</ul>


<h2>Regra nº 1: Coloque seus scripts no rodapé</h2>

<p>Desta maneira você evita que o carregamento da página seja bloqueado enquanto eles são baixados, &#8220;parseados&#8221; e executados. <a href="http://developer.yahoo.com/performance/rules.html#js_bottom">Saiba mais</a></p>

<h2>Regra nº 2: Use um CDN em produção</h2>

<p>Fazendo isso, não otimizamos apenas nossa aplicação, mas a de todos que fizerem o mesmo. <a href="http://developer.yahoo.com/performance/rules.html#cdn">Saiba mais</a></p>

<p>O Angular está hospedado no <a href="https://developers.google.com/speed/libraries/devguide?hl=pt-PT#angularjs">CDN do Google</a>, basta incluí-lo no projeto, sempre no rodapé] e estaremos prontos para começar.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Recomendo ter o arquivo no projeto também, para poder trabalhar offline e se aventurar pelo código! :)</p>

<h2>Bônus: Carregue seus scripts de forma assíncrona e gerencie suas dependencias</h2>

<p><img class="center" src="http://cironunes.github.com/images/posts/logo-requirejs.png"></p>

<p>Caso prefira, saiba mais sobre os <a href="https://gist.github.com/desandro/4686136">benefícios de fazê-lo</a> antes de continuar.</p>

<p>Este <a href="https://github.com/cironunes/ng-require">demo</a> será usado para facilitar a explicação. É indispensável cloná-lo e navegar pelo código para entender como funciona.</p>

<p>Para conseguirmos fazer o carregamento assíncrono dos nossos scripts, primeiro precisamos entender como funcionar o “startup” do Angular.</p>

<h2>Angular startup</h2>

<p>Sua aplicação pode ser iniciada de duas formas:</p>

<p><strong>Automaticamente:</strong> via <code>ng-app</code></p>

<div><script src='https://gist.github.com/5229926.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>você pode passar também um nome opicional para o módulo</p>

<div><script src='https://gist.github.com/5229865.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<ul>
<li><strong>manualmente:</strong> via <code>angular.bootstrap</code></li>
</ul>


<div><script src='https://gist.github.com/5229948.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>Essa flexibilidade, nos possibilita carregar nossos recursos como bem entendermos, e quando estivermos prontos (callback) fazer o Angular <a href="http://docs.angularjs.org/api/ng.$compile">ler nosso HTML</a> e dar vida as nossas diretivas.</p>

<p><strong>Atenção:</strong> Para que possamos carregar nossos scripts em qualquer ordem, é necessário incluir o script a seguir, antes do carregamento do nosso módulo principal do RequireJS.</p>

<div><script src='https://gist.github.com/5431503.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>Depois basta fazer a chamada principal</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">data</span><span class="o">-</span><span class="nx">main</span><span class="o">=</span><span class="s2">&quot;js/main.js&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/libs/require.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>O arquivo <code>main.js</code> deve se parecer com este:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">requirejs</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">baseUrl</span><span class="o">:</span> <span class="s1">&#39;js/libs&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">app</span><span class="o">:</span> <span class="s1">&#39;../&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">requirejs</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;angular&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/app&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/controllers&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/filters&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/services&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/directives&#39;</span>
</span><span class='line'>    <span class="p">],</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">angular</span><span class="p">.</span><span class="nx">bootstrap</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;myApp&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Onde carregamos nossas dependências de forma assíncrona, e depois de tudo pronto, usamos o <code>angular.bootstrap</code> para fazer o startup manual.</p>

<p>Mais uma vez, recomendo fortemente dar uma olhada no código do <a href="https://github.com/cironunes/ng-require">demo</a> para um entendimento mais claro.</p>

<p>Dúvidas? Não concorda com algo? Mande um e-mail ou deixe um comentário, só não deixe de me notificar! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS: Melhores práticas - Parte I: Iniciando projetos]]></title>
    <link href="http://cironunes.github.com/angularjs-melhores-praticas-parte-I-bootstrap/"/>
    <updated>2013-03-10T16:01:00-03:00</updated>
    <id>http://cironunes.github.com/angularjs-melhores-praticas-parte-I-bootstrap</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://cironunes.github.com/images/posts/cover-bestpratices-bootstrap.jpg"></p>

<p>Melhores práticas são como fórmulas mágicas para ajudar na organização do seu projeto, documentadas por desenvolvedores que tiveram sucesso usando elas em diversas situações.</p>

<p>Nesta série vou compartilhar algumas técnicas que tornam meu trabalho cada vez mais simples e divertido.</p>

<p>Essas práticas foram baseadas <a href="http://www.youtube.com/watch?v=ZhfUv0spHCY&amp;feature=g-user-u">neste vídeo</a> e nas minhas experiências diárias.</p>

<!-- more -->


<h2>Por que eu preciso organizar meu projeto?</h2>

<ul>
<li><strong>Facilitar a manutenção</strong></li>
<li><strong>Aumentar a velocidade de desenvolvimento</strong></li>
<li><strong>Identificar problemas antecipadamente</strong></li>
</ul>


<h2>Navegue pela série</h2>

<ul>
<li><a href="http://cironunes.github.com/angularjs-melhores-praticas-parte-I-bootstrap">Parte I - Iniciando um projeto e a estrutura de diretórios</a></li>
<li><a href="http://cironunes.github.com/angularjs-melhores-praticas-parte-II-carregamento">Parte II - Carregamento de scripts</a></li>
<li>Parte III - Dicas e truques</li>
<li>Parte IV - MVC</li>
</ul>


<h2>Iniciar um projeto e a estrutura de diretórios</h2>

<p>Esta é a etapa mais importante, e pode definir o sucesso ou fracasso do nosso projeto. Aqui surgem várias dúvidas e teremos bastante trabalho:</p>

<ul>
<li>Como organizar a estrutura de diretórios? (Criar os diretórios manualmente)</li>
<li>Quais serão as dependências? (Baixar cada uma e adicionar manualmente no projeto)</li>
<li>Como vou preparar pacotes para produção? (Instalar ferramenta de build e configurá-la manualmente)</li>
</ul>


<p>Não reinvente a roda! Existem vários &#8220;bootstraps&#8221; para fazer estas coisas de forma automatizada, padronizada e seguindo as boas práticas:</p>

<h2><a href="http://github.com/angular/angular-seed">Angular Seed</a> e variações (<a href="http://github.com/btford/angular-socket-io-seed/">Express + Socket.IO</a>, <a href="http://github.com/btford/angular-express-seed">Express</a>)*</h2>

<p>Mantidos pelos próprios membros do time do Angular, os &#8216;seeds&#8217; são repositórios que você simplesmente clona:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git@github.com:angular/angular-seed.git</span></code></pre></td></tr></table></div></figure>


<p>apaga as referências para o repositório original:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rm -rf .git</span></code></pre></td></tr></table></div></figure>


<p>E está pronto para começar seu projeto com:</p>

<ul>
<li><strong>Estrutura de diretórios bem organizada e padronizada</strong>: o que facilita encontrar as coisas até mesmo se for a primeira vez que alguem esteja vendo seu projeto.</li>
<li><strong>Suites de testes unitários e <a href="http://docs.angularjs.org/guide/dev_guide.e2e-testing">e2e</a></strong></li>
<li><strong>Scripts para rodar os testes inclusive de forma contínua.</strong></li>
</ul>


<p><em>*Os seeds de Express e Socket.IO não vem com a suite de testes, mas é só você copiar do seed principal :)</em></p>

<p>Incrível! Mas pode ser ainda melhor, atualmente o time do Angular recomanda o uso do Yeoman.</p>

<h2>Yeoman</h2>

<p><img class="center" src="http://cironunes.github.com/images/posts/logo-yeoman.png">
O <a href="http://yeoman.io">Yeoman</a> é uma ferramenta para facilitar nosso workflow, independente das libraries e frameworks Front-end que vamos usar. Ele utiliza de outras ferramentas incríveis: <a href="http://gruntjs.com/">Grunt</a> e <a href="http://twitter.github.com/bower/">Bower</a>, para te ajudar a:</p>

<ul>
<li><strong>Inicializar projetos</strong>: criar toda a estrutura de diretórios e configurar a suite de testes</li>
<li><strong>Gerencias dependencias</strong>: adicionar, remover e atualizar recursos</li>
<li><strong>Criar pacotes</strong>: preparar seus releases para testes ou para produção</li>
<li><strong>Executar testes automatizados</strong></li>
<li><strong>Manter recursos do framework</strong>: no caso do AngularJS, criar controllers, views, rotas, etc.</li>
</ul>


<p>Depois de instalar o Yeoman (veja como instalar no <a href="http://yeoman.io">site oficial</a>), instale os generators para o Angular:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install generator-angular generator-testacular</span></code></pre></td></tr></table></div></figure>


<p>Inicie um novo projeto:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yo angular [nome-da-app]</span></code></pre></td></tr></table></div></figure>


<p>O Yeoman vai te perguntar se você deseja usar o Twitter Bootstrap. Se sim, prefere uma versão com o Compass? (Eu particularmente prefiro). Depois se quer incluir os módulos: <a href="http://docs.angularjs.org/api/ngResource.$resource"><code>angular-resource</code></a>, <a href="http://docs.angularjs.org/api/ngCookies.$cookies"><code>angular-cookies</code></a>, <a href="http://docs.angularjs.org/api/ngSanitize.$sanitize"><code>angular-sanitize</code></a>. Recomendo que responda sim para todos, mas você pode incluí-los a qualquer momento usando o Bower.</p>

<p>Feito isso, instale as depencias:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install && bower install --dev</span></code></pre></td></tr></table></div></figure>


<p>Instale o <code>angular-mocks</code> para os testes funcionarem corretamente:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bower install angular-mocks</span></code></pre></td></tr></table></div></figure>


<p>Então você já pode rodar seus testes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grunt test</span></code></pre></td></tr></table></div></figure>


<p>Rodar sua aplicação em ambiente local:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grunt server</span></code></pre></td></tr></table></div></figure>


<p>E gerar um pacote para produção:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grunt</span></code></pre></td></tr></table></div></figure>


<p>Além disso você pode usar os geradores para criar seus controllers, views, services, directives, filters e routes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yo angular:controller myCtrl
</span><span class='line'>$ yo angular:view myView
</span><span class='line'>$ yo angular:service myService
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>O mais interessante é que além de criar os arquivos e incluí-los no meu HTML automaticamente com os nomes e lugares corretos, ele já cria a <code>spec</code>correspondente na minha suite de testes, incentivando sempre a fazer <a href="http://en.wikipedia.org/wiki/Test_Driven_Development">TDD</a>.</p>

<p>Dúvidas? Não concorda com algo? Mande um <a href="mailto:ciroanunes@gmail.com">e-mail</a> ou deixe um comentário, só não deixe de me notificar! :)</p>

<p>Por hoje é só!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tunando o browser com o AngularJS]]></title>
    <link href="http://cironunes.github.com/tunando-o-browser-com-o-angularjs/"/>
    <updated>2013-03-02T07:58:00-03:00</updated>
    <id>http://cironunes.github.com/tunando-o-browser-com-o-angularjs</id>
    <content type="html"><![CDATA[<p>No início do ano, a convite do meu amigo <a href="http://twitter.com/felquis">@felquis</a> participei de um <a href="http://devcastbrasil.com">DevCast</a> para mostrar como o <a href="http://angularjs.org">AngularJS</a> veio para tornar o desenvolvimento de aplicações web simples e divertido.</p>

<p>Confira o <a href="http://devcastbrasil.com/videos/tunando-o-browser-com-angularjs/">post sobre este DevCast no DevCast Brasil</a></p>

<p>Confira o vídeo abaixo:</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Ph9hVLTmF2E "></iframe></div>

]]></content>
  </entry>
  
</feed>
